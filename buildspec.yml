version: 0.2

env:
  HOST: https://sonarcloud.io
  LOGIN: a118bbf80d4e95a5bf6130dbc012d059f87fecd3
  ORGANIZATON: walakulu
  PROJECT_KEY: walakulu_spring-codepipeline

phases:
  install:
    runtime-versions:
      docker: 18
  pre_build:
    commands:
      - apt-get install -y jq
      - echo Logging in to Amazon ECR...
      - aws --version
      - $(aws ecr get-login --region $AWS_DEFAULT_REGION --no-include-email)
      - COMMIT_HASH=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
      - IMAGE_TAG=${COMMIT_HASH:=latest}
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...
#      - mvn verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar
      - mvn sonar:sonar -Dsonar.login=$LOGIN -Dsonar.host.url=$HOST -Dsonar.projectKey=$PROJECT_KEY -Dsonar.organization=$ORGANIZATON
      - sleep 5
      - curl https://sonarcloud.io/api/qualitygates/project_status?projectKey=$PROJECT_KEY >result.json
      - cat result.json
      - if [ $(jq -r '.projectStatus.status' result.json) = ERROR ] ; then $CODEBUILD_BUILD_SUCCEEDING -eq 0 ;fi
      - mvn package
      - docker build -t $ECR_REPOSITORY_URI:latest .
      - docker tag $ECR_REPOSITORY_URI:latest $ECR_REPOSITORY_URI:$IMAGE_TAG
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker images...
      - docker push $ECR_REPOSITORY_URI:latest
      - docker push $ECR_REPOSITORY_URI:$IMAGE_TAG
      - printf '{"ImageURI":"%s:%s"}' $ECR_REPOSITORY_URI $IMAGE_TAG > imageDetail.json
artifacts:
  files:
    - imageDetail.json